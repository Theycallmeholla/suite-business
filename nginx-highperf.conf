user nginx;
# Match worker processes to allocated CPU cores
worker_processes 2;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize for high-performance server
worker_rlimit_nofile 131072;

events {
    worker_connections 16384;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging with buffer
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=64k;

    # Performance optimizations for high-spec server
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;
    
    # Increased limits for high-traffic
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;
    client_max_body_size 50M;
    client_body_buffer_size 256k;
    large_client_header_buffers 4 32k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # Cache settings - utilizing available memory
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:100m inactive=7d use_temp_path=off max_size=2g;
    proxy_buffer_size 8k;
    proxy_buffers 64 8k;
    proxy_busy_buffers_size 256k;

    # Upstream configuration with keepalive
    upstream nextjs_upstream {
        least_conn;
        server app:3000 max_fails=3 fail_timeout=30s;
        # Add more app instances if running multiple containers
        # server app2:3000 max_fails=3 fail_timeout=30s;
        keepalive 256;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # Rate limiting zones - increased for high-spec server
    limit_req_zone $binary_remote_addr zone=general:50m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=api:50m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:50m;

    # Default server block
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }

    # Main application server
    server {
        listen 80;
        server_name yourdomain.com www.yourdomain.com;

        # Connection limits
        limit_conn addr 100;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        location / {
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Rate limiting with higher burst
            limit_req zone=general burst=100 nodelay;
        }

        location /api {
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Higher limits for API
            limit_req zone=api burst=200 nodelay;
            client_max_body_size 100M;
        }

        location /api/auth {
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Strict rate limiting for auth
            limit_req zone=auth burst=10 nodelay;
        }

        # Static file caching
        location /_next/static {
            proxy_cache STATIC;
            proxy_pass http://nextjs_upstream;
            proxy_cache_valid 365d;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Cache-Status $upstream_cache_status;
        }

        location /static {
            proxy_cache STATIC;
            proxy_pass http://nextjs_upstream;
            proxy_cache_valid 365d;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
        }

        # Server status (restrict in production)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}