version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: suitebusiness-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-suitebusiness_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-suitebusiness_prod_password}
      POSTGRES_DB: ${POSTGRES_DB:-suitebusiness}
      # Performance tuning for PostgreSQL
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
      # PostgreSQL configuration
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-config.conf:/etc/postgresql/postgresql.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-suitebusiness_user} -d ${POSTGRES_DB:-suitebusiness}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Resource limits - adjust these to match your VPS
    deploy:
      resources:
        limits:
          cpus: '1.0'          # Number of CPU cores (e.g., '0.5' for half a core, '2.0' for 2 cores)
          memory: 1G           # Memory limit (e.g., '512M', '1G', '2G')
        reservations:
          cpus: '0.25'         # Reserved CPU (minimum guaranteed)
          memory: 256M         # Reserved memory (minimum guaranteed)
    # Additional runtime constraints
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Application container (Next.js)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: suitebusiness-app
    restart: always
    ports:
      - "${PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-suitebusiness_user}:${POSTGRES_PASSWORD:-suitebusiness_prod_password}@postgres:5432/${POSTGRES_DB:-suitebusiness}?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    # Resource limits - adjust these to match your VPS
    deploy:
      resources:
        limits:
          cpus: '2.0'          # Adjust based on your VPS CPU cores
          memory: 2G           # Adjust based on your VPS RAM
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Nginx reverse proxy (optional but recommended for production)
  nginx:
    image: nginx:alpine
    container_name: suitebusiness-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - app
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    name: suitebusiness_postgres_data
  nginx_cache:
    name: suitebusiness_nginx_cache

# Network configuration for better isolation
networks:
  default:
    name: suitebusiness_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16